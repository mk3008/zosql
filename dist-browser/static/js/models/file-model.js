export class FileModel{constructor(t,e="",i={}){this.id=this.generateId(),this.name=t,this.originalContent=e,this.currentContent=e,this.isModified=!1,this.lastModified=new Date,this.type=i.type||this.inferTypeFromName(t),this.metadata={encoding:i.encoding||"UTF-8",size:e.length,created:new Date,...i.metadata},this.changeHistory=[],this.maxHistorySize=i.maxHistorySize||50,console.log(`[FileModel] Created model for: ${t} (${this.id})`)}generateId(){return"file_"+Math.random().toString(36).substr(2,9)+"_"+Date.now().toString(36)}inferTypeFromName(t){const e=t.split(".").pop()?.toLowerCase();switch(e){case"sql":return"sql";case"js":return"javascript";case"ts":return"typescript";case"json":return"json";case"md":return"markdown";default:return"text"}}updateContent(t,e="user"){return t!==this.currentContent&&(this.saveToHistory(this.currentContent,e),this.currentContent=t,this.isModified=t!==this.originalContent,this.lastModified=new Date,this.metadata.size=t.length,console.log(`[FileModel] Content updated for: ${this.name}, modified: ${this.isModified}`),!0)}saveToHistory(t,e){this.changeHistory.push({content:t,timestamp:new Date,source:e,checksum:this.calculateChecksum(t)}),this.changeHistory.length>this.maxHistorySize&&this.changeHistory.shift()}calculateChecksum(t){let e=0;if(0===t.length)return e;for(let i=0;i<t.length;i++)e=(e<<5)-e+t.charCodeAt(i),e&=e;return e}resetToOriginal(){this.updateContent(this.originalContent,"reset"),console.log(`[FileModel] Reset to original for: ${this.name}`)}hasChanges(){return this.isModified}getContent(){return this.currentContent}getOriginalContent(){return this.originalContent}getStats(){return{id:this.id,name:this.name,type:this.type,isModified:this.isModified,size:this.metadata.size,originalSize:this.originalContent.length,created:this.metadata.created,lastModified:this.lastModified,changeCount:this.changeHistory.length,encoding:this.metadata.encoding}}getTabName(){return this.name.replace(/\.(sql|SQL)$/,"")}getHistory(){return[...this.changeHistory]}toJSON(){return{id:this.id,name:this.name,originalContent:this.originalContent,currentContent:this.currentContent,isModified:this.isModified,lastModified:this.lastModified.toISOString(),type:this.type,metadata:this.metadata,changeHistory:this.changeHistory.slice(-10)}}static fromJSON(t){const e=new FileModel(t.name,t.originalContent,{type:t.type,encoding:t.metadata?.encoding,metadata:t.metadata});return e.id=t.id,e.currentContent=t.currentContent,e.isModified=t.isModified,e.lastModified=new Date(t.lastModified),e.changeHistory=t.changeHistory||[],e}destroy(){this.changeHistory=[],console.log(`[FileModel] Destroyed model for: ${this.name} (${this.id})`)}}
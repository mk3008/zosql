class SidebarManager{constructor(){this.STORAGE_KEY_PREFIX="zosql-sidebar-",this.state={leftSidebar:!0,rightSidebar:!0},this.init()}init(){this.loadState(),console.log("[SidebarManager] Initial state after load:",this.state),this.setupEventListeners(),this.applyInitialState(),console.log("[SidebarManager] Initialized with immediate state application")}setupEventListeners(){const e=document.getElementById("toggle-left-sidebar"),t=document.getElementById("toggle-right-sidebar");e&&e.addEventListener("click",()=>this.toggleLeftSidebar()),t&&t.addEventListener("click",()=>this.toggleRightSidebar()),document.addEventListener("header-left-sidebar-toggle",()=>{this.toggleLeftSidebar()}),document.addEventListener("header-right-sidebar-toggle",()=>{this.toggleRightSidebar()}),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&"b"===e.key&&(e.preventDefault(),this.toggleLeftSidebar()),(e.ctrlKey||e.metaKey)&&e.shiftKey&&"B"===e.key&&(e.preventDefault(),this.toggleRightSidebar())})}toggleLeftSidebar(){console.log(`[SidebarManager] toggleLeftSidebar called - current state: ${this.state.leftSidebar}`),this.state.leftSidebar=!this.state.leftSidebar,console.log(`[SidebarManager] toggleLeftSidebar - new state: ${this.state.leftSidebar}`),this.applyLeftSidebarState(),this.saveState(),this.updateButtonStates(),console.log("[SidebarManager] Left sidebar: "+(this.state.leftSidebar?"shown":"hidden"))}toggleRightSidebar(){this.state.rightSidebar=!this.state.rightSidebar,this.applyRightSidebarState(),this.saveState(),this.updateButtonStates(),console.log("[SidebarManager] Right sidebar: "+(this.state.rightSidebar?"shown":"hidden"))}applyLeftSidebarState(){console.log("[SidebarManager] applyLeftSidebarState:",{shadowDOMEnabled:!0,leftSidebarState:this.state.leftSidebar,timestamp:(new Date).toISOString()});{const e=document.getElementById("workspace-panel-shadow"),t=document.getElementById("left-sidebar"),a=document.getElementById("workspace-panel"),o=document.querySelector(".legacy-controls");console.log("[SidebarManager] Shadow DOM mode - elements found:",{shadowWorkspacePanel:!!e,traditionalLeftSidebar:!!t,traditionalWorkspacePanel:!!a,legacyControls:!!o,shadowPanelCurrentDisplay:e?.style.display,traditionalPanelCurrentDisplay:t?.style.display}),this.state.leftSidebar?(t&&(t.style.display="block",t.style.flexShrink="0",t.style.visibility="visible",t.style.opacity="1",console.log("[SidebarManager] DEBUG: Set traditional left sidebar to BLOCK")),a&&(a.style.display="none"),o&&(o.style.display="none"),e&&(e.style.display="block",e.style.width="100%",e.style.height="100%",e.style.visibility="visible",e.style.opacity="1",console.log("[SidebarManager] DEBUG: Set shadow workspace panel to BLOCK"),console.log("[SidebarManager] Shadow workspace panel: SHOWN (within left-sidebar)")),console.log("[SidebarManager] Left sidebar container: SHOWN with Shadow content")):(t&&(t.style.display="none",console.log("[SidebarManager] DEBUG: Set traditional left sidebar to NONE")),e&&(e.style.display="none",console.log("[SidebarManager] DEBUG: Set shadow workspace panel to NONE")),console.log("[SidebarManager] Left sidebar: HIDDEN")),e||(console.warn("[SidebarManager] Shadow workspace panel not found! DOM not ready?"),setTimeout(()=>{console.log("[SidebarManager] Retrying left sidebar state application..."),this.applyLeftSidebarState()},100))}}applyRightSidebarState(){{const e=document.getElementById("right-panel-shadow"),t=document.getElementById("context-sidebar");t&&(t.style.display="none"),e&&(this.state.rightSidebar?e.style.display="flex":e.style.display="none")}}applyInitialState(){this.applyLeftSidebarState(),this.applyRightSidebarState(),this.applyCenterPanelState(),this.updateButtonStates()}updateButtonStates(){this.updateTraditionalButtons(),this.updateShadowDOMButtons()}updateTraditionalButtons(){}updateShadowDOMButtons(){}saveState(){localStorage.setItem(this.STORAGE_KEY_PREFIX+"left",this.state.leftSidebar.toString()),localStorage.setItem(this.STORAGE_KEY_PREFIX+"right",this.state.rightSidebar.toString())}loadState(){const e=localStorage.getItem(this.STORAGE_KEY_PREFIX+"left"),t=localStorage.getItem(this.STORAGE_KEY_PREFIX+"right");console.log("[SidebarManager] loadState - localStorage values:",{leftState:e,rightState:t,leftStateParsed:"true"===e,rightStateParsed:"true"===t}),this.state.leftSidebar=!0,this.state.rightSidebar=!0,console.log("[SidebarManager] DEBUG: Force setting both sidebars to true"),console.log("[SidebarManager] loadState - final state:",this.state)}showLeftSidebar(){this.state.leftSidebar||this.toggleLeftSidebar()}showRightSidebar(){this.state.rightSidebar||this.toggleRightSidebar()}hideLeftSidebar(){this.state.leftSidebar&&this.toggleLeftSidebar()}hideRightSidebar(){this.state.rightSidebar&&this.toggleRightSidebar()}toggleBothSidebars(){this.state.leftSidebar&&this.state.rightSidebar?(this.hideLeftSidebar(),this.hideRightSidebar()):(this.showLeftSidebar(),this.showRightSidebar())}onShadowDOMToggle(){console.log("[SidebarManager] Shadow DOM toggle detected, re-applying states..."),setTimeout(()=>{this.applyLeftSidebarState(),this.applyRightSidebarState(),this.applyCenterPanelState(),this.updateButtonStates(),console.log("[SidebarManager] States re-applied after Shadow DOM toggle")},100)}applyCenterPanelState(){const e=document.getElementById("editor-split-container"),t=document.querySelector(".content-area"),a=document.getElementById("center-panel-shadow");t&&(t.style.display="none"),e&&(e.style.display="none"),a&&(a.style.display="flex",a.style.flex="1",a.style.minWidth="0",a.style.width="100%")}getState(){return{leftSidebar:this.state.leftSidebar,rightSidebar:this.state.rightSidebar,keyboardShortcuts:{leftSidebar:"Ctrl/Cmd + B",rightSidebar:"Ctrl/Cmd + Shift + B"}}}handleResize(){window.innerWidth<768&&(this.state.leftSidebar||this.state.rightSidebar)&&(this.hideLeftSidebar(),this.hideRightSidebar())}destroy(){console.log("[SidebarManager] Destroyed")}}export{SidebarManager};if(window.SidebarManager=SidebarManager,!window.sidebarManager){const e=new SidebarManager;window.sidebarManager=e}window.addEventListener("resize",()=>{sidebarManager.handleResize()}),window.sidebarManager=sidebarManager,window.toggleLeftSidebar=()=>sidebarManager.toggleLeftSidebar(),window.toggleRightSidebar=()=>sidebarManager.toggleRightSidebar(),window.getSidebarState=()=>sidebarManager.getState(),window.resetSidebarState=()=>{console.log("[DEBUG] Resetting sidebar state..."),localStorage.removeItem("zosql-sidebar-left"),localStorage.removeItem("zosql-sidebar-right"),sidebarManager.state.leftSidebar=!0,sidebarManager.state.rightSidebar=!0,sidebarManager.applyInitialState(),console.log("[DEBUG] Sidebar state reset complete - both sidebars should now be visible")},window.showLeftSidebar=()=>{console.log("[DEBUG] Forcing left sidebar to show..."),sidebarManager.state.leftSidebar=!0,sidebarManager.applyLeftSidebarState(),sidebarManager.updateButtonStates(),sidebarManager.saveState(),console.log("[DEBUG] Left sidebar forced to show and state saved")},window.forceSidebarDebug=()=>{console.log("[DEBUG] Current sidebar state:",sidebarManager.getState()),console.log("[DEBUG] ShadowDOM enabled:",window.shadowDOMToggle?.isEnabled),console.log("[DEBUG] Elements check:"),console.log("  - left-sidebar:",!!document.getElementById("left-sidebar")),console.log("  - workspace-panel-shadow:",!!document.getElementById("workspace-panel-shadow")),console.log("  - context-sidebar:",!!document.getElementById("context-sidebar")),console.log("  - right-panel-shadow:",!!document.getElementById("right-panel-shadow"))},window.forceShowLeftSidebar=()=>{console.log("[DEBUG] Forcing left sidebar to show..."),sidebarManager.state.leftSidebar=!0,sidebarManager.applyLeftSidebarState(),sidebarManager.updateButtonStates(),console.log("[DEBUG] Force show complete")},window.debugLeftPanelState=()=>{const e=document.getElementById("left-sidebar"),t=document.getElementById("workspace-panel-shadow"),a=document.querySelector(".main-layout, .app-layout, .layout-container");console.group("[DEBUG] Left Panel State Analysis"),console.log("Current state:",sidebarManager.state.leftSidebar),console.log("Shadow DOM enabled:",!0),console.log("Traditional panel element:",e),console.log("Shadow panel element:",t),console.log("Main container element:",a),e&&(console.log("Traditional panel computed style display:",getComputedStyle(e).display),console.log("Traditional panel inline style display:",e.style.display),console.log("Traditional panel width:",getComputedStyle(e).width),console.log("Traditional panel getBoundingClientRect:",e.getBoundingClientRect())),t&&(console.log("Shadow panel computed style display:",getComputedStyle(t).display),console.log("Shadow panel inline style display:",t.style.display),console.log("Shadow panel width:",getComputedStyle(t).width),console.log("Shadow panel flex-shrink:",getComputedStyle(t).flexShrink),console.log("Shadow panel getBoundingClientRect:",t.getBoundingClientRect()),console.log("Shadow panel offsetWidth:",t.offsetWidth),console.log("Shadow panel offsetHeight:",t.offsetHeight),console.log("Shadow panel position:",getComputedStyle(t).position),console.log("Shadow panel visibility:",getComputedStyle(t).visibility),console.log("Shadow panel opacity:",getComputedStyle(t).opacity)),a&&(console.log("Main container display:",getComputedStyle(a).display),console.log("Main container flex-direction:",getComputedStyle(a).flexDirection)),console.log("Local storage left state:",localStorage.getItem("zosql-sidebar-left")),console.log("Shadow DOM toggle storage:",localStorage.getItem("zosql-shadow-dom-enabled")),console.groupEnd()},window.addEventListener("DOMContentLoaded",()=>{console.log("[DEBUG] DOMContentLoaded fired")}),window.addEventListener("load",()=>{console.log("[DEBUG] Window load fired"),setTimeout(()=>{console.log("[DEBUG] Final state check after page load:"),window.debugLeftPanelState()},500)});
export function initializeTabs(){window.logger.info("Initializing tab system..."),setupInitialTabs(),setupTabEventHandlers(),setupToolbarHandlers(),window.logger.info("Tab system initialized successfully")}function setupInitialTabs(){new URLSearchParams(window.location.search).get("file")||createNewTab("left","welcome-left","Welcome","main-file","-- Welcome to zosql Browser\n-- Enter your SQL query here\n\nSELECT * FROM users;")}function setupTabEventHandlers(){document.querySelectorAll(".new-tab-btn").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.getAttribute("data-panel");t&&createNewTab(t)})}),document.querySelectorAll(".tab-bar").forEach(e=>{e.addEventListener("wheel",t=>{t.preventDefault();const n=2*t.deltaY;e.scrollLeft+=n})})}function setupToolbarHandlers(){document.querySelectorAll(".run-query-btn").forEach(e=>{e.addEventListener("click",()=>{window.runQuery()})}),document.querySelectorAll(".format-sql-btn").forEach(e=>{e.addEventListener("click",()=>{window.formatCurrentSQL()})}),document.querySelectorAll(".save-tab-btn").forEach(e=>{e.addEventListener("click",()=>{window.saveCurrentTab()})})}export function findTabByName(e,t=null){const n=t?[t]:["left","right"];for(const t of n){const n="left"===t?window.appState.leftTabs:window.appState.rightTabs;for(const[a,o]of n)if(o.name===e)return{tabId:a,panel:t,tab:o}}return null}export function findTabByType(e,t=null){const n=t?[t]:["left","right"];for(const t of n){const n="left"===t?window.appState.leftTabs:window.appState.rightTabs;for(const[a,o]of n)if(o.type===e)return{tabId:a,panel:t,tab:o}}return null}export function createOrActivateTab(e,t=null,n=null,a="main-file",o=""){if(n){const e=findTabByName(n);if(e)return switchToTab(e.tabId,e.panel),window.logger.info(`Activated existing tab: ${n} (${e.panel})`),e.tabId}return createNewTab(e,t,n,a,o)}export function createNewTab(e,t=null,n=null,a="main-file",o=""){const r="left"===e?window.appState.leftTabs:window.appState.rightTabs;t||(t="tab-"+ ++window.appState.tabCounter),n||(n=`Query ${window.appState.tabCounter}`);const i={id:t,name:n,type:a,content:o,isModified:!1,queryResult:null};return r.set(t,i),createTabElement(t,e,i),switchToTab(t,e),updateEditorContent(e,o),window.logger.info(`Created new tab: ${n} (${e})`),t}function createTabElement(e,t,n){const a=document.getElementById(`${t}-tab-bar`),o=a.querySelector(".tab-controls"),r=document.createElement("div");r.className="tab",r.setAttribute("data-tab-id",e),r.setAttribute("data-panel",t);const i=getTabIcon(n.type),l=n.isModified?" •":"";r.innerHTML=`\n    ${i} ${n.name}${l}\n    <span class="close-btn" onclick="closeTab(event, '${e}', '${t}')">×</span>\n  `,r.addEventListener("click",()=>{switchToTab(e,t)}),a.insertBefore(r,o)}function getTabIcon(e){switch(e){case"table":return"[TBL]";case"shared-cte":return"[SHARED]";case"private-cte":return"[PRIVATE]";case"main-file":return"[FILE]";default:return"[QUERY]"}}export function switchToTab(e,t){const n=("left"===t?window.appState.leftTabs:window.appState.rightTabs).get(e);n&&("left"===t?window.appState.activeLeftTabId=e:window.appState.activeRightTabId=e,window.appState.activePanel=t,updateTabActiveState(e,t),updateEditorContent(t,n.content),n.queryResult?updateQueryResults(n.queryResult,t):clearQueryResults(t),window.updateContextPanel&&window.updateContextPanel(),window.logger.debug(`Switched to tab: ${n.name} (${t})`))}function updateTabActiveState(e,t){document.getElementById(`${t}-tab-bar`).querySelectorAll(".tab").forEach(t=>{const n=t.getAttribute("data-tab-id");t.classList.toggle("active",n===e)})}function updateEditorContent(e,t){import("./editor.js").then(({setEditorContent:n})=>{n(e,t)})}function updateQueryResults(e,t){const n=document.getElementById(`${t}-results-content`),a=document.getElementById(`${t}-execution-info`);if(n&&a)if(e.success)if(a.textContent=`${e.rows.length} rows (${e.executionTime.toFixed(2)}ms)`,e.rows.length>0){let t="<table><thead><tr>";e.fields.forEach(e=>{t+=`<th>${e.name}</th>`}),t+="</tr></thead><tbody>",e.rows.forEach(n=>{t+="<tr>",e.fields.forEach(e=>{const a=n[e.name];t+=`<td>${null!==a?a:"<em>null</em>"}</td>`}),t+="</tr>"}),t+="</tbody></table>",n.innerHTML=t}else n.innerHTML='<div class="results-placeholder">Query executed successfully (0 rows returned)</div>';else a.textContent="Query failed",n.innerHTML=`\n      <div style="color: #f44336; padding: 20px; font-family: monospace;">\n        <strong>Error:</strong> ${e.error}\n      </div>\n    `}function clearQueryResults(e){const t=document.getElementById(`${e}-results-content`),n=document.getElementById(`${e}-execution-info`);t&&(t.innerHTML='<div class="results-placeholder">Run a query to see results here</div>'),n&&(n.textContent="")}export function closeTab(e,t,n){e.stopPropagation();const a="left"===n?window.appState.leftTabs:window.appState.rightTabs,o=a.get(t);if(!o)return;if(o.isModified&&!confirm(`Tab "${o.name}" has unsaved changes. Are you sure you want to close it?`))return;const r=document.querySelector(`[data-tab-id="${t}"]`);if(r&&r.remove(),a.delete(t),("left"===n?window.appState.activeLeftTabId:window.appState.activeRightTabId)===t){const e=Array.from(a.keys());e.length>0?switchToTab(e[0],n):createNewTab(n)}window.logger.info(`Closed tab: ${o.name} (${n})`)}window.createNewTab=createNewTab,window.switchToTab=switchToTab,window.closeTab=closeTab;export{closeTab as closeTabById};
import{ShadowComponentBase,ShadowElementBase}from"./base/shadow-component-base.js";export class RightPanelShadowComponent extends ShadowComponentBase{beforeInit(){this.sections=new Map,this.isCollapsed=!1,this.activeTab="values",this.tabs=[{id:"values",label:"Values",icon:"üìä"},{id:"condition",label:"Condition",icon:"üîç"}],this.valuesContent="-- Define test data CTEs here\n-- Write WITH clauses, SELECT clauses can be omitted (they will be ignored if written)\n-- Example:\nwith _users(user_id, name) as (\n  values\n    (1, 'alice'),\n    (2, 'bob')\n),\nusers as (\n  select\n    user_id::bigint,\n    name::text\n  from _users\n)",this.conditionContent="-- Conditions will be implemented in future"}getDefaultConfig(){return{title:"Context Panel",collapsible:!0,resizable:!0,defaultWidth:"300px"}}getEventPrefix(){return"right-panel"}getStyles(){return"\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          background: var(--bg-secondary, #f9fafb);\n          height: 100%;\n          width: 100%;\n          overflow-y: auto;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n          flex-shrink: 0;\n          border-left: 1px solid var(--border-primary, #e5e7eb);\n          padding: 12px;\n        }\n        \n        .resize-handle {\n          position: absolute;\n          left: 0;\n          top: 0;\n          width: 4px;\n          height: 100%;\n          background: transparent;\n          cursor: col-resize;\n          z-index: 10;\n        }\n        \n        .resize-handle:hover {\n          background: var(--border-accent, #3b82f6);\n        }\n        \n        .workspace-panel-content {\n          display: flex;\n          flex-direction: column;\n          padding: 0;\n        }\n        \n        .workspace-section {\n          border-bottom: 1px solid var(--border-primary, #e5e7eb);\n          padding: 8px;\n        }\n        \n        .workspace-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          cursor: pointer;\n          user-select: none;\n          font-weight: 500;\n          color: var(--text-primary, #111827);\n          font-size: 14px;\n          margin-bottom: 8px;\n          transition: color 0.2s;\n        }\n        \n        .workspace-header:hover {\n          color: var(--text-accent, #3b82f6);\n        }\n        \n        .workspace-content {\n          font-size: 14px;\n          color: var(--text-secondary, #6b7280);\n        }\n        \n        .collapse-icon {\n          transition: transform 0.2s;\n          font-size: 12px;\n        }\n        \n        .workspace-section.collapsed .collapse-icon {\n          transform: rotate(0deg);\n        }\n        \n        .workspace-section:not(.collapsed) .collapse-icon {\n          transform: rotate(90deg);\n        }\n        \n        .workspace-section.collapsed .workspace-content {\n          display: none;\n        }\n        \n        \n        \n        .editor-wrapper {\n          height: 100%;\n          position: relative;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .values-description {\n          padding: 12px;\n          background: var(--bg-secondary, #2d2d30);\n          color: var(--text-secondary, #999);\n          font-size: 12px;\n          line-height: 1.4;\n        }\n\n        .prompt-controls {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          margin-top: 6px;\n        }\n\n        .copy-prompt-btn {\n          background: var(--accent, #007acc);\n          color: white;\n          border: none;\n          padding: 6px 12px;\n          border-radius: 4px;\n          font-size: 12px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n\n        .copy-prompt-btn:hover {\n          background: var(--accent-hover, #005a9e);\n        }\n\n        .copy-prompt-btn:active {\n          background: var(--accent-active, #004578);\n        }\n\n        .schema-collector-option {\n          display: flex;\n          align-items: center;\n          gap: 4px;\n          font-size: 12px;\n          color: var(--text-secondary, #999);\n        }\n\n        .schema-collector-checkbox {\n          margin: 0;\n        }\n\n        .error-message {\n          margin-top: 8px;\n          padding: 8px;\n          background: var(--error-bg, #d73a49);\n          color: white;\n          border-radius: 4px;\n          font-size: 12px;\n          line-height: 1.4;\n          position: relative;\n          display: none;\n          border-left: 3px solid #cb2431;\n        }\n\n        .error-message.show {\n          display: block;\n        }\n\n        .error-close-btn {\n          position: absolute;\n          top: 4px;\n          right: 6px;\n          background: none;\n          border: none;\n          color: white;\n          cursor: pointer;\n          font-size: 14px;\n          padding: 0;\n          width: 20px;\n          height: 20px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .error-close-btn:hover {\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 2px;\n        }\n        \n        textarea.code-editor {\n          width: 100%;\n          flex: 1;\n          background: var(--bg-primary, #1e1e1e);\n          color: var(--text-primary, #ccc);\n          border: none;\n          padding: 12px;\n          font-family: 'Consolas', 'Monaco', 'Courier New', monospace;\n          font-size: 13px;\n          line-height: 1.5;\n          resize: none;\n          outline: none;\n          white-space: nowrap;\n          overflow-x: auto;\n          box-sizing: border-box;\n        }\n        \n        textarea.code-editor::placeholder {\n          color: var(--text-muted, #666);\n        }\n        \n        .empty-state {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          height: 200px;\n          color: var(--text-muted, #9ca3af);\n          text-align: center;\n        }\n        \n        .empty-icon {\n          font-size: 48px;\n          margin-bottom: 12px;\n          opacity: 0.5;\n        }\n        \n        .empty-title {\n          font-size: 16px;\n          font-weight: 500;\n          margin-bottom: 6px;\n          color: var(--text-secondary, #6b7280);\n        }\n        \n        .empty-message {\n          font-size: 14px;\n          line-height: 1.5;\n        }\n        \n        .workspace-title {\n          font-weight: 500;\n          color: var(--text-primary, #111827);\n          font-size: 14px;\n        }\n        \n        /* „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú */\n        @media (max-width: 768px) {\n          :host {\n            width: 100%;\n            max-width: none;\n          }\n        }\n        \n        /* Â∞ÜÊù•„ÅÆÊ©üËÉΩÁî®„Çπ„Çø„Ç§„É´ */\n        .feature-placeholder {\n          padding: 12px;\n          background: var(--bg-tertiary, #f9fafb);\n          border: 2px dashed var(--border-light, #e5e7eb);\n          border-radius: 8px;\n          text-align: center;\n          color: var(--text-muted, #9ca3af);\n          font-size: 13px;\n          margin: 8px 0;\n        }\n        \n        .coming-soon {\n          font-style: italic;\n          opacity: 0.7;\n        }\n      </style>\n    "}renderContent(){return`\n      <div class="resize-handle" title="Resize panel"></div>\n      <div class="workspace-panel-content">\n        ${this.renderSections()}\n      </div>\n    `}renderSections(){return`\n      <div class="workspace-section ${this.getSectionState("values")?"collapsed":""}" data-section="values">\n        <div class="workspace-header">\n          <span>Values</span>\n          <span class="collapse-icon">‚ñ∂</span>\n        </div>\n        <div class="workspace-content">\n          ${this.renderValuesContent()}\n        </div>\n      </div>\n      <div class="workspace-section ${this.getSectionState("condition")?"collapsed":""}" data-section="condition">\n        <div class="workspace-header">\n          <span>Condition</span>\n          <span class="collapse-icon">‚ñ∂</span>\n        </div>\n        <div class="workspace-content">\n          ${this.renderConditionContent()}\n        </div>\n      </div>\n    `}renderValuesContent(){return`\n      <div class="editor-wrapper">\n        <div class="values-description">\n          Define test data using WITH clauses.<br>\n          For AI-assisted definition, use "Copy Prompt".\n          <div class="prompt-controls">\n            <button class="copy-prompt-btn" id="copy-prompt-btn">Copy Prompt</button>\n            <label class="schema-collector-option">\n              <input type="checkbox" class="schema-collector-checkbox" id="use-schema-collector" checked>\n              use SchemaCollector\n            </label>\n          </div>\n          <div class="error-message" id="schema-error-message">\n            <button class="error-close-btn" id="error-close-btn">√ó</button>\n            <span class="error-text"></span>\n          </div>\n        </div>\n        <textarea class="code-editor" id="values-editor" placeholder="Write WITH clauses, SELECT clauses can be omitted (they will be ignored if written)">${this.valuesContent}</textarea>\n      </div>\n    `}renderConditionContent(){return`\n      <div class="editor-wrapper">\n        <textarea class="code-editor" id="condition-editor" readonly placeholder="Conditions will be implemented in future...">${this.conditionContent}</textarea>\n      </div>\n    `}renderPanelContent(){if(0===this.sections.size)return this.renderEmptyState();let e="";for(const[n,t]of this.sections)e+=this.renderSection(n,t);return e}renderEmptyState(){return'\n      <div class="empty-state">\n        <div class="empty-title">Right Panel</div>\n        <div class="empty-message">\n          Ready for future features\n        </div>\n      </div>\n      \n      <div class="feature-placeholder">\n        <div class="coming-soon">ÂàÜÊûêÁµêÊûúË°®Á§∫„Ç®„É™„Ç¢</div>\n      </div>\n      \n      <div class="feature-placeholder">\n        <div class="coming-soon">Ê§úÁ¥¢„Éª„Éï„Ç£„É´„Çø„Éº„Ç®„É™„Ç¢</div>\n      </div>\n    '}renderSection(e,n){return`\n      <div class="workspace-section ${n.collapsed?"collapsed":""}" data-section="${e}">\n        <div class="workspace-header">\n          <div class="workspace-title">${n.title}</div>\n          <div class="collapse-icon">‚ñº</div>\n        </div>\n        <div class="workspace-content">\n          ${n.content}\n        </div>\n      </div>\n    `}setupEventListeners(){this.addClickHandler("#refresh-btn",()=>this.handleRefresh()),this.addClickHandler("#settings-btn",()=>this.handleSettings()),this.addClickHandler("#collapse-btn",()=>this.handleCollapse()),this.addClickHandler(".workspace-header",(e,n)=>{e.preventDefault(),e.stopPropagation();const t=n.closest(".workspace-section");if(t){const e=t.dataset.section;t.classList.toggle("collapsed"),this.saveSectionState(e,t.classList.contains("collapsed"))}});const e=this.$("#values-editor");e&&e.addEventListener("input",e=>{this.valuesContent=e.target.value,this.triggerCallback("values-changed",{content:this.valuesContent})}),this.addClickHandler("#copy-prompt-btn",()=>this.handleCopyPrompt()),this.addClickHandler("#error-close-btn",()=>this.hideErrorMessage()),this.setupResizeHandler()}setupResizeHandler(){const e=this.$(".resize-handle");if(!e)return;let n=!1,t=0,o=0;e.addEventListener("mousedown",e=>{n=!0,t=e.clientX,o=this.shadowRoot.host.offsetWidth,document.body.style.cursor="col-resize",e.preventDefault()}),document.addEventListener("mousemove",e=>{if(!n)return;const s=t-e.clientX,a=Math.max(200,Math.min(500,o+s));this.shadowRoot.host.style.width=`${a}px`}),document.addEventListener("mouseup",()=>{n&&(n=!1,document.body.style.cursor="")})}handleRefresh(){console.log("[RightPanelShadow] Refresh triggered"),this.triggerCallback("refresh")}handleSettings(){console.log("[RightPanelShadow] Settings triggered"),this.triggerCallback("settings")}handleCollapse(){this.isCollapsed=!this.isCollapsed,console.log("[RightPanelShadow] Collapse toggled:",this.isCollapsed),this.triggerCallback("collapse",{isCollapsed:this.isCollapsed})}switchTab(e){this.activeTab!==e&&(this.activeTab=e,this.shadowRoot.querySelectorAll(".tab").forEach(n=>{n.classList.toggle("active",n.dataset.tabId===e)}),this.shadowRoot.querySelectorAll(".tab-content").forEach(n=>{n.classList.toggle("active",n.id===`tab-${e}`)}),this.triggerCallback("tab-switched",{tabId:e}))}getValuesContent(){return this.valuesContent}async handleCopyPrompt(){try{this.hideErrorMessage();const e=document.getElementById("center-panel-shadow");if(!e||!e.getActiveTabContent)throw new Error("Center panel not available");const n=e.getActiveTabContent();if(!n||!n.trim())throw new Error("No SQL query found in center panel");const t=this.$("#use-schema-collector")?.checked??!0,o=await this.generatePrompt(n,t);await navigator.clipboard.writeText(o),this.showToast("Prompt copied to clipboard!","success")}catch(e){console.error("[RightPanel] Copy prompt failed:",e),e.message.includes("Schema analysis failed")?this.showErrorMessage(e.message):this.showToast(`Failed to copy prompt: ${e.message}`,"error")}}async generatePrompt(e,n=!0){if(!n)return`„Åì„ÅÆSQL„ÇíDBÁí∞Â¢É‰æùÂ≠ò„Å™„Åó„ÅßÂãï„Åã„Åó„Åü„ÅÑ„ÅÆ„Åß„ÄÅ\nÂÖÉ„ÅÆSQL„ÅØÂ§âÊõ¥„Åõ„Åö„Å´„ÄÅÂøÖË¶Å„Å™„ÉÜ„Éº„Éñ„É´„Çí VALUES Êñá„ÅßÂÆöÁæ©„Åó„Åü„É¢„ÉÉ„ÇØ„ÉÜ„Éº„Éñ„É´„Å®„Åó„Å¶\nWITHÂè•„ÅÆ„Åø „Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\nSELECTÊñá„Å™„Å©„ÅØ‰∏çË¶Å„Åß„ÄÅWITHÂè•„Å†„ÅëÂõûÁ≠î„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n\`\`\`sql\n${e}\n\`\`\``;try{const n=await this.extractSchemaInfo(e);if(0===n.tables.length)throw new Error("No tables detected in the SQL query");return`„Åì„ÅÆSQL„ÇíDBÁí∞Â¢É‰æùÂ≠ò„Å™„Åó„ÅßÂãï„Åã„Åó„Åü„ÅÑ„ÅÆ„Åß„ÄÅ\nÂÖÉ„ÅÆSQL„ÅØÂ§âÊõ¥„Åõ„Åö„Å´„ÄÅÂøÖË¶Å„Å™„ÉÜ„Éº„Éñ„É´ ${n.tables.map(e=>`${e.name}(${e.columns.join(", ")})`).join(", ")} „Çí VALUES Êñá„ÅßÂÆöÁæ©„Åó„Åü„É¢„ÉÉ„ÇØ„ÉÜ„Éº„Éñ„É´„Å®„Åó„Å¶\nWITHÂè•„ÅÆ„Åø „Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\nSELECTÊñá„Å™„Å©„ÅØ‰∏çË¶Å„Åß„ÄÅWITHÂè•„Å†„ÅëÂõûÁ≠î„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n\`\`\`sql\n${e}\n\`\`\``}catch(e){throw console.error("[RightPanel] Schema extraction failed:",e),new Error(`Schema analysis failed: ${e.message}. Please fix the SQL query to resolve ambiguous column references (e.g., use table.column instead of column).`)}}async extractSchemaInfo(e){const n=await fetch("/api/extract-schema",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sql:e})});if(!n.ok)throw new Error(`Schema extraction failed: ${n.status}`);const t=await n.json();if(!t.success)throw new Error(t.error||"Schema extraction failed");return{tables:t.tables||[]}}showErrorMessage(e){const n=this.$("#schema-error-message"),t=this.$("#schema-error-message .error-text");n&&t&&(t.textContent=e,n.classList.add("show"))}hideErrorMessage(){const e=this.$("#schema-error-message");e&&e.classList.remove("show")}showToast(e,n="info"){window.showToast?window.showToast(e,n):console.log(`[Toast] ${n}: ${e}`)}toggleSection(e){const n=this.shadowRoot.querySelector(`[data-section="${e}"]`);n&&(n.classList.toggle("collapsed"),this.saveSectionState(e,n.classList.contains("collapsed")))}saveSectionState(e,n){try{localStorage.setItem(`right-panel-section-${e}`,n.toString())}catch(e){console.warn("Could not save section state:",e)}}getSectionState(e){try{return"true"===localStorage.getItem(`right-panel-section-${e}`)}catch(e){return!1}}addSection(e,n){this.sections.set(e,{title:n.title,content:n.content||"",collapsed:n.collapsed||!1,...n}),this.render()}removeSection(e){this.sections.delete(e),this.render()}setTitle(e){this.config.title=e;const n=this.$(".panel-title");n&&(n.innerHTML=`${e}`)}}export class RightPanelShadowElement extends ShadowElementBase{static get componentClass(){return RightPanelShadowComponent}gatherOptions(){return{title:this.getAttributeOrDefault("title","Context Panel"),collapsible:this.getBooleanAttribute("collapsible"),resizable:this.getBooleanAttribute("resizable")}}setupComponentCallbacks(){["refresh","settings","collapse"].forEach(e=>{this.component.onCallback(e,n=>{this.dispatchEvent(new CustomEvent(e,{detail:n,bubbles:!0}))})})}exposeComponentAPI(){this.exposeMethods(["addSection","removeSection","setTitle","getValuesContent"])}}"undefined"!=typeof customElements&&customElements.define("right-panel-shadow",RightPanelShadowElement),window.RightPanelShadowComponent=RightPanelShadowComponent;
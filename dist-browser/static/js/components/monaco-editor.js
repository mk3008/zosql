export class MonacoEditorComponent{constructor(t,e={}){this.container=t,this.editor=null,this.isInitialized=!1,this.onContentChange=e.onContentChange||(()=>{}),this.onSave=e.onSave||(()=>{}),this.onFormat=e.onFormat||(()=>{}),this.onRun=e.onRun||(()=>{}),this.config={language:"sql",theme:"vs-dark",fontSize:14,tabSize:4,wordWrap:"off",minimap:{enabled:!1},scrollBeyondLastLine:!1,automaticLayout:!1,...e.editorConfig},this.init()}async init(){try{this.container.classList.add("monaco-container"),this.renderStructure(),await this.initializeMonaco(),this.attachEventListeners(),this.isInitialized=!0}catch(t){console.error("Monaco Editor initialization failed:",t),this.renderError(t.message)}}renderStructure(){this.container.innerHTML=`\n      <div class="monaco-toolbar">\n        <button class="btn btn-primary btn-sm run-btn" title="Run Query (Ctrl+Enter)">\n          <span>‚ñ∂Ô∏è</span> Run\n        </button>\n        <button class="btn btn-secondary btn-sm format-btn" title="Format SQL (Ctrl+Shift+F)">\n          <span>üé®</span> Format\n        </button>\n        <button class="btn btn-secondary btn-sm save-btn" title="Save (Ctrl+S)">\n          <span>üíæ</span> Save\n        </button>\n      </div>\n      <div class="monaco-editor-wrapper" id="monaco-editor-${Date.now()}">\n      </div>\n    `}async initializeMonaco(){"undefined"==typeof monaco&&await this.loadMonacoFromCDN();const t=this.container.querySelector(".monaco-editor-wrapper");await this.setupSQLLanguage();const e=await this.loadFormatterConfig();e&&(this.config.tabSize=e.indentSize||4),this.editor=monaco.editor.create(t,{value:"",language:this.config.language,theme:"vs-dark",fontSize:this.config.fontSize,tabSize:this.config.tabSize,insertSpaces:!0,wordWrap:this.config.wordWrap,minimap:this.config.minimap,scrollBeyondLastLine:this.config.scrollBeyondLastLine,automaticLayout:!1,lineNumbers:"on",renderWhitespace:"boundary",folding:!0,foldingStrategy:"indentation",scrollbar:{horizontal:"auto",vertical:"auto",horizontalScrollbarSize:10,verticalScrollbarSize:10}}),this.editor.onDidChangeModelContent(t=>{this.onContentChange(this.getValue(),t)}),setTimeout(()=>{this.layout()},100)}async loadMonacoFromCDN(){return new Promise((t,e)=>{if(void 0!==window.require)return require.config({paths:{vs:"https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/min/vs"}}),void require(["vs/editor/editor.main"],()=>{t()},e);const n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/min/vs/loader.js",n.onload=()=>{require.config({paths:{vs:"https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/min/vs"}}),require(["vs/editor/editor.main"],t,e)},n.onerror=e,document.head.appendChild(n)})}async setupSQLLanguage(){try{if(!monaco.languages.getLanguages().find(t=>"sql"===t.id))return void console.warn("SQL language not found in Monaco Editor, using default text language");console.log("Using built-in SQL language support")}catch(t){console.error("Failed to setup SQL language:",t)}}async loadFormatterConfig(){try{const t=await fetch("/api/formatter-config");if(t.ok)return await t.json()}catch(t){console.warn("Could not load formatter config:",t)}return{indentSize:4,indentChar:" ",tabSize:4}}attachEventListeners(){this.container.addEventListener("click",t=>{t.target.closest(".run-btn")?this.runQuery():t.target.closest(".format-btn")?this.formatContent():t.target.closest(".save-btn")&&this.save()}),this.editor&&(this.editor.addCommand(monaco.KeyMod.CtrlCmd|monaco.KeyCode.Enter,()=>{this.runQuery()}),this.editor.addCommand(monaco.KeyMod.CtrlCmd|monaco.KeyMod.Shift|monaco.KeyCode.KeyF,()=>{this.formatContent()}),this.editor.addCommand(monaco.KeyMod.CtrlCmd|monaco.KeyCode.KeyS,()=>{this.save()}))}setValue(t){this.editor&&this.editor.setValue(t||"")}getValue(){return this.editor?this.editor.getValue():""}getSelectedText(){if(!this.editor)return"";const t=this.editor.getSelection();return this.editor.getModel().getValueInRange(t)}focus(){this.editor&&this.editor.focus()}async runQuery(){if(!this.isInitialized)return;const t=this.getValue();if(t.trim()){this.updateStatus("Running query...");try{await this.onRun(t),this.updateStatus("Query executed")}catch(t){this.updateStatus("Query failed"),console.error("Query execution error:",t)}}else this.updateStatus("No query to run")}async formatContent(){if(!this.isInitialized)return;const t=this.getValue();if(t.trim()){this.updateStatus("Formatting...");try{await this.onFormat(t),this.updateStatus("Formatted")}catch(t){this.updateStatus("Format failed"),console.error("Format error:",t)}}}async save(){if(!this.isInitialized)return;const t=this.getValue();this.updateStatus("Saving...");try{await this.onSave(t),this.updateStatus("Saved")}catch(t){this.updateStatus("Save failed"),console.error("Save error:",t)}}updateStatus(t){const e=this.container.querySelector(".monaco-status");e&&(e.textContent=t,setTimeout(()=>{e.textContent===t&&(e.textContent="")},3e3))}renderError(t){this.container.innerHTML=`\n      <div class="monaco-error">\n        <h3>Monaco Editor Error</h3>\n        <p>${t}</p>\n        <button class="btn btn-primary" onclick="location.reload()">Reload Page</button>\n      </div>\n    `}setTheme(t="vs-dark"){this.editor&&(monaco.editor.setTheme(t),this.config.theme=t)}setFontSize(t){this.editor&&(this.editor.updateOptions({fontSize:t}),this.config.fontSize=t)}setReadOnly(t){this.editor&&this.editor.updateOptions({readOnly:t})}layout(){if(this.editor){const t=this.container.querySelector(".monaco-editor-wrapper");if(!t)return;const e=t.getBoundingClientRect(),n=e.width||800,o=Math.max(e.height||200,100);this.editor.layout({width:n,height:o}),window.logger&&window.logger.info("Monaco Editor manual layout",{containerWidth:e.width,containerHeight:e.height,forcedWidth:n,forcedHeight:o,dynamicHeight:!0})}}getDebugInfo(){return{isInitialized:this.isInitialized,hasEditor:!!this.editor,contentLength:this.getValue().length,config:this.config}}destroy(){this.editor&&(this.editor.dispose(),this.editor=null),this.isInitialized=!1,this.container&&(this.container.innerHTML="")}}export class MonacoEditorElement extends HTMLElement{constructor(){super(),this.component=null}connectedCallback(){const t={onContentChange:(t,e)=>{this.dispatchEvent(new CustomEvent("content-change",{detail:{content:t,event:e},bubbles:!0}))},onSave:async t=>{this.dispatchEvent(new CustomEvent("save",{detail:{content:t},bubbles:!0}))},onFormat:async t=>{this.dispatchEvent(new CustomEvent("format",{detail:{content:t},bubbles:!0}))},onRun:async t=>{this.dispatchEvent(new CustomEvent("run",{detail:{content:t},bubbles:!0}))}};this.component=new MonacoEditorComponent(this,t)}disconnectedCallback(){this.component&&this.component.destroy()}setValue(t){return this.component?.setValue(t)}getValue(){return this.component?.getValue()||""}focus(){return this.component?.focus()}layout(){return this.component?.layout()}}"undefined"!=typeof customElements&&customElements.define("monaco-editor",MonacoEditorElement),window.MonacoEditorComponent=MonacoEditorComponent;
import{ShadowComponentBase,ShadowElementBase}from"./base/shadow-component-base.js";export class HeaderShadowComponent extends ShadowComponentBase{getDefaultConfig(){return{title:"zosql",showLogo:!0,showOpenButton:!0,showSidebarToggles:!0,showShadowDOMToggle:!1}}getEventPrefix(){return"header"}getStyles(){return"\n      <style>\n        :host {\n          display: block;\n          background: var(--bg-tertiary, #374151);\n          padding: 10px 20px;\n          border-bottom: 1px solid var(--border-primary, #e5e7eb);\n          height: var(--header-height, 60px);\n          box-sizing: border-box;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n        }\n        \n        .header-container {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          height: 100%;\n        }\n        \n        .header-left {\n          display: flex;\n          align-items: center;\n          gap: 20px;\n        }\n        \n        .header-logo {\n          font-size: 24px;\n          font-weight: bold;\n          color: var(--text-white, #ffffff);\n          text-decoration: none;\n          cursor: pointer;\n        }\n        \n        .header-logo:hover {\n          opacity: 0.8;\n        }\n        \n        .header-controls {\n          display: flex;\n          align-items: center;\n          gap: 15px;\n        }\n        \n        .header-btn {\n          background: var(--bg-primary, #4b5563);\n          color: var(--text-white, #ffffff);\n          border: 1px solid var(--border-secondary, #6b7280);\n          border-radius: 6px;\n          padding: 8px 12px;\n          font-size: 14px;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          gap: 6px;\n          transition: all 0.2s;\n          font-family: inherit;\n        }\n        \n        .header-btn:hover {\n          background: var(--bg-secondary, #6b7280);\n          border-color: var(--border-accent, #3b82f6);\n        }\n        \n        .header-btn.accent {\n          background: var(--bg-accent, #3b82f6);\n          color: white;\n          border-color: var(--bg-accent-hover, #2563eb);\n        }\n        \n        .header-btn.accent:hover {\n          background: var(--bg-accent-hover, #2563eb);\n        }\n        \n        .header-btn.toggle {\n          min-width: 36px;\n          padding: 8px;\n          justify-content: center;\n        }\n        \n        .sidebar-toggles {\n          display: flex;\n          gap: 10px;\n          padding: 0 15px;\n          border-left: 1px solid var(--border-secondary, #6b7280);\n          margin-left: 10px;\n        }\n        \n        .loading-spinner {\n          display: inline-block;\n          width: 14px;\n          height: 14px;\n          border: 2px solid transparent;\n          border-top-color: white;\n          border-radius: 50%;\n          animation: spin 0.8s linear infinite;\n        }\n        \n        @keyframes spin {\n          to { transform: rotate(360deg); }\n        }\n        \n        /* „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥ */\n        @media (max-width: 768px) {\n          :host {\n            padding: 10px;\n          }\n          \n          /* „Çµ„Ç§„Éâ„Éê„Éº„Éà„Ç∞„É´„Éú„Çø„É≥„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÅÆ„ÅøÈùûË°®Á§∫ */\n          .sidebar-toggles .header-btn span {\n            display: none;\n          }\n          \n          /* Open„Éú„Çø„É≥„ÅØÂ∏∏„Å´Ë°®Á§∫„ÉªÊúÄÂ∞è„Çµ„Ç§„Ç∫Á¢∫‰øù */\n          .header-btn.accent {\n            min-width: 80px;\n            padding: 10px 12px;\n            font-size: 14px;\n          }\n          \n          .header-btn.accent span {\n            display: inline;\n          }\n          \n          .sidebar-toggles {\n            padding: 0 10px;\n          }\n          \n          /* „Çµ„Ç§„Éâ„Éê„Éº„Éà„Ç∞„É´„Éú„Çø„É≥„ÅÆ„Çµ„Ç§„Ç∫Ë™øÊï¥ */\n          .header-btn.toggle {\n            min-width: 40px;\n            padding: 10px;\n            font-size: 16px;\n          }\n        }\n      </style>\n    "}renderContent(){return`\n      <div class="header-container">\n        <div class="header-left">\n          ${this.config.showLogo?this.renderLogo():""}\n        </div>\n        <div class="header-controls">\n          ${this.config.showOpenButton?this.renderOpenButton():""}\n          ${this.config.showShadowDOMToggle?this.renderShadowDOMToggle():""}\n          ${this.config.showSidebarToggles?this.renderSidebarToggles():""}\n        </div>\n      </div>\n    `}renderLogo(){return`\n      <div class="header-logo" id="app-logo">\n        ${this.config.title}\n      </div>\n    `}renderOpenButton(){return'\n      <button class="header-btn accent" id="open-file-btn" title="Open SQL file (Ctrl+O)">\n        <span>üìÅ</span>\n        <span>Open</span>\n      </button>\n    '}renderShadowDOMToggle(){return'\n      <button class="header-btn" id="shadow-dom-toggle" title="Toggle Shadow DOM">\n        <span>üî≤</span>\n        <span>Shadow DOM</span>\n      </button>\n    '}renderSidebarToggles(){return'\n      <div class="sidebar-toggles">\n        <button class="header-btn toggle" id="toggle-left-sidebar" title="Toggle Left Sidebar">\n          ‚óÄ\n        </button>\n        <button class="header-btn toggle" id="toggle-right-sidebar" title="Toggle Right Sidebar">\n          ‚ñ∂\n        </button>\n      </div>\n    '}setupEventListeners(){this.addClickHandler("#open-file-btn",()=>this.handleOpenFile()),this.addClickHandler("#shadow-dom-toggle",()=>this.handleShadowDOMToggle()),this.addClickHandler("#toggle-left-sidebar",()=>this.handleLeftSidebarToggle()),this.addClickHandler("#toggle-right-sidebar",()=>this.handleRightSidebarToggle()),this.addClickHandler("#app-logo",()=>this.handleLogoClick())}handleOpenFile(){console.log("[HeaderShadow] Open file clicked"),this.setLoading(!0);const e=document.createElement("input");e.type="file",e.accept=".sql",e.onchange=e=>{const n=e.target.files[0];if(n){const e=new FileReader;e.onload=e=>{const t=e.target.result;this.triggerCallback("open-file",{fileName:n.name,content:t}),this.setLoading(!1),this.showToast(`File opened: ${n.name}`,"success")},e.onerror=()=>{console.error("Failed to read file"),this.setLoading(!1),this.showToast(`Failed to read file: ${n.name}`,"error")},e.readAsText(n)}else this.setLoading(!1)};const n=()=>{setTimeout(()=>{e.files&&0!==e.files.length||(this.setLoading(!1),console.log("[HeaderShadow] File dialog was canceled"))},100),window.removeEventListener("focus",n)};window.addEventListener("focus",n),e.click()}handleShadowDOMToggle(){console.log("[HeaderShadow] Shadow DOM toggle clicked"),this.triggerCallback("shadow-dom-toggle"),this.updateShadowDOMToggleButton()}handleLeftSidebarToggle(){console.log("[HeaderShadow] Left sidebar toggle clicked"),this.triggerCallback("left-sidebar-toggle")}handleRightSidebarToggle(){console.log("[HeaderShadow] Right sidebar toggle clicked"),this.triggerCallback("right-sidebar-toggle")}handleLogoClick(){console.log("[HeaderShadow] Logo clicked"),this.triggerCallback("logo-click")}setTitle(e){this.config.title=e;const n=this.$("#app-logo");n&&(n.textContent=e)}setLoading(e){const n=this.$("#open-file-btn");n&&(e?(n.innerHTML='<div class="loading-spinner"></div><span>Loading...</span>',n.disabled=!0):(n.innerHTML="<span>üìÅ</span><span>Open</span>",n.disabled=!1))}updateShadowDOMToggleButton(){this.$("#shadow-dom-toggle")&&console.log("[HeaderShadow] Shadow DOM toggle button updated")}}export class HeaderShadowElement extends ShadowElementBase{static get componentClass(){return HeaderShadowComponent}gatherOptions(){return{title:this.getAttributeOrDefault("title","zosql Browser"),showLogo:this.getBooleanAttribute("show-logo"),showOpenButton:this.getBooleanAttribute("show-open"),showSidebarToggles:this.getBooleanAttribute("show-sidebar-toggles"),showShadowDOMToggle:this.getBooleanAttribute("show-shadow-dom-toggle")}}setupComponentCallbacks(){["open-file","shadow-dom-toggle","left-sidebar-toggle","right-sidebar-toggle","logo-click"].forEach(e=>{this.component.onCallback(e,n=>{this.dispatchEvent(new CustomEvent(e,{detail:n,bubbles:!0}))})})}exposeComponentAPI(){this.exposeMethods(["setTitle","setLoading","updateShadowDOMToggleButton"])}}"undefined"!=typeof customElements&&customElements.define("header-shadow",HeaderShadowElement),window.HeaderShadowComponent=HeaderShadowComponent;
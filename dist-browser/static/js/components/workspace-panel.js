export class WorkspacePanelComponent{constructor(e,t={}){this.container=e,this.sections=new Map,this.cteTreeComponent=null,this.onTableClick=t.onTableClick||(()=>{}),this.onCteClick=t.onCteClick||(()=>{}),this.onMainQueryClick=t.onMainQueryClick||(()=>{}),this.config={defaultSections:["workspace","tables"],collapsible:!0,persistState:!0,...t},this.init()}init(){this.container.classList.add("workspace-panel"),this.loadState(),this.render()}registerSection(e,t){this.sections.set(e,{title:t.title,content:t.content||"",collapsible:!1!==t.collapsible,collapsed:t.collapsed||!1,...t}),this.render()}initializeDefaultSections(){this.registerSection("workspace",{title:"Workspace",content:this.renderWorkspaceContent(),collapsible:!0,collapsed:!1}),this.registerSection("tables",{title:"Tables",content:this.renderTablesContent(),collapsible:!0,collapsed:!1})}updateCteTree(e){const t=e.privateCtes?e:{privateCtes:e};window.logger&&window.logger.info("Workspace Panel updateCteTree called",{hasData:!!e,dataType:typeof e,dataKeys:Object.keys(e||{}),normalizedData:t,hasComponent:!!this.cteTreeComponent}),this.cteTreeComponent?this.cteTreeComponent.update(t):this.createCteTreeComponent(t),this.updateSection("workspace",{content:this.renderWorkspaceContent()})}createCteTreeComponent(e){window.logger&&window.logger.info("Creating CTE Tree Component",{hasData:!!e,dataKeys:Object.keys(e||{}),privateCteCount:Object.keys(e.privateCtes||{}).length}),import("./cte-tree.js").then(t=>{const{CTETreeComponent:n}=t;window.logger&&window.logger.info("CTE Tree Component module loaded successfully");const s=document.createElement("div");s.className="cte-tree-container",this.cteTreeComponent=new n(s,{onCteClick:this.onCteClick,onMainQueryClick:this.onMainQueryClick}),this.cteTreeComponent.update(e),window.logger&&window.logger.info("CTE Tree Component created and updated successfully"),this.updateSection("workspace",{content:this.renderWorkspaceContent()})}).catch(e=>{window.logger?window.logger.error("CTE Tree Component loading failed",{error:e.message,stack:e.stack}):console.error("CTE Tree Component loading failed:",e)})}updateTables(e){this.tables=e||[],this.updateSection("tables",{content:this.renderTablesContent()})}updateSection(e,t){const n=this.sections.get(e);n&&(Object.assign(n,t),this.render())}toggleSection(e){const t=this.sections.get(e);t&&t.collapsible&&(t.collapsed=!t.collapsed,this.saveState(),this.updateSectionDisplay(e))}render(){0===this.sections.size&&this.initializeDefaultSections();let e="";this.config.defaultSections.forEach(t=>{const n=this.sections.get(t);n&&(e+=this.renderSection(t,n))}),this.container.innerHTML=e,this.attachEventListeners(),this.restoreCteTreeComponent()}renderSection(e,t){const n=t.collapsed?" collapsed":"",s=t.collapsible?`<span class="collapse-icon">${t.collapsed?"▶":"▼"}</span>`:"";return`\n      <div class="workspace-section${n}" data-section="${e}">\n        <div class="workspace-header" ${t.collapsible?`data-toggle="${e}"`:""}>\n          <span class="workspace-title">${t.title}</span>\n          ${s}\n        </div>\n        <div class="workspace-content">\n          ${t.content}\n        </div>\n      </div>\n    `}renderWorkspaceContent(){return`\n      <div class="cte-tree-wrapper">\n        ${this.cteTreeComponent?this.cteTreeComponent.container.outerHTML:""}\n      </div>\n    `}renderTablesContent(){return this.tables&&0!==this.tables.length?this.tables.map(e=>`\n      <div class="table-item clickable" data-table="${e.name}" title="${e.name}">\n        <span class="table-icon">[TBL]</span>\n        <span class="table-name">${e.name}</span>\n        <span class="table-columns">(${e.columns?e.columns.length:0})</span>\n      </div>\n    `).join(""):'<div class="text-muted">No tables available</div>'}restoreCteTreeComponent(){if(this.cteTreeComponent){const e=this.container.querySelector(".cte-tree-wrapper");e&&(e.innerHTML="",e.appendChild(this.cteTreeComponent.container))}}updateSectionDisplay(e){const t=this.container.querySelector(`[data-section="${e}"]`);if(!t)return;const n=this.sections.get(e),s=t.querySelector(".workspace-content"),o=t.querySelector(".collapse-icon");n.collapsed?(t.classList.add("collapsed"),o&&(o.textContent="▶"),s&&(s.style.display="none")):(t.classList.remove("collapsed"),o&&(o.textContent="▼"),s&&(s.style.display="block"))}attachEventListeners(){this.container.addEventListener("click",e=>{const t=e.target.closest("[data-toggle]");if(t){e.preventDefault(),e.stopPropagation();const n=t.dataset.toggle;this.toggleSection(n)}}),this.container.addEventListener("click",e=>{const t=e.target.closest(".table-item");if(t){e.preventDefault(),e.stopPropagation();const n=t.dataset.table;this.onTableClick(n)}})}saveState(){if(!this.config.persistState)return;const e={};this.sections.forEach((t,n)=>{e[n]={collapsed:t.collapsed}});try{localStorage.setItem("zosql-workspace-state",JSON.stringify(e))}catch(e){console.warn("Could not save workspace state:",e)}}loadState(){if(this.config.persistState)try{const e=JSON.parse(localStorage.getItem("zosql-workspace-state")||"{}");this.sections.forEach((t,n)=>{e[n]&&(t.collapsed=e[n].collapsed)})}catch(e){console.warn("Could not load workspace state:",e)}}setActive(e,t){const n=this.container.querySelector(".active");if(n&&n.classList.remove("active"),"table"===e){const e=this.container.querySelector(`[data-table="${t}"]`);e&&e.classList.add("active")}else"cte"===e&&this.cteTreeComponent&&this.cteTreeComponent.setActiveCte(t)}getSection(e){return this.sections.get(e)}getAllSections(){return Array.from(this.sections.entries()).map(([e,t])=>({key:e,...t}))}getDebugInfo(){return{sectionsCount:this.sections.size,sections:this.getAllSections().map(e=>({key:e.key,title:e.title,collapsed:e.collapsed})),hasCteTree:!!this.cteTreeComponent,tablesCount:this.tables?this.tables.length:0}}destroy(){this.cteTreeComponent&&(this.cteTreeComponent.destroy(),this.cteTreeComponent=null),this.sections.clear(),this.container&&(this.container.innerHTML="")}}export class WorkspacePanelElement extends HTMLElement{constructor(){super(),this.component=null}connectedCallback(){this.classList.add("workspace-panel"),this.component=new WorkspacePanelComponent(this,{onTableClick:e=>{this.dispatchEvent(new CustomEvent("table-click",{detail:{tableName:e},bubbles:!0}))},onCteClick:e=>{this.dispatchEvent(new CustomEvent("cte-click",{detail:{cteName:e},bubbles:!0}))},onMainQueryClick:()=>{this.dispatchEvent(new CustomEvent("main-query-click",{bubbles:!0}))}})}disconnectedCallback(){this.component&&this.component.destroy()}updateCteTree(e){return this.component?.updateCteTree(e)}updateTables(e){return this.component?.updateTables(e)}setActive(e,t){return this.component?.setActive(e,t)}toggleSection(e){return this.component?.toggleSection(e)}}"undefined"!=typeof customElements&&customElements.define("workspace-panel",WorkspacePanelElement),window.WorkspacePanelComponent=WorkspacePanelComponent;